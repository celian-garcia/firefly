{"version":3,"file":"task-modal.component.js","sourceRoot":"","sources":["../../../../src/app/tasks-overview/task-modal.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\n\nimport {DialogRef, ModalComponent, CloseGuard} from 'angular2-modal';\nimport {BSModalContext} from 'angular2-modal/plugins/bootstrap';\nimport {Task} from 'app/api-firefly/data/Task';\nimport {Module} from '../api-firefly/data/Module';\nimport {Type} from '../api-firefly/data/Type';\nimport {TaskService} from '../api-firefly/task.service';\nimport {ModuleService} from 'app/api-firefly/module.service';\n\nexport class TaskModalContext extends BSModalContext {\n}\n\n@Component({\n    selector: 'app-task-modal',\n    providers: [TaskService, ModuleService],\n    styleUrls: ['./task-modal.component.css'],\n    templateUrl: './task-modal.component.html'\n})\nexport class TaskModalComponent implements OnInit, CloseGuard, ModalComponent<TaskModalContext> {\n    context: TaskModalContext;\n    task: Task;\n    errorMessage: string;\n    modules_list: Module[];\n\n    private static controlTaskBeforeCreate(task: Task): boolean {\n        return true;\n    }\n\n    constructor(public dialog: DialogRef<TaskModalContext>, private taskService: TaskService, private moduleService: ModuleService) {\n        this.context = dialog.context;\n        this.task = new Task();\n        this.task.name = 'Default title';\n        this.task.description = 'Default description';\n        dialog.setCloseGuard(this);\n    }\n\n    ngOnInit() {\n        this.moduleService.getModules().subscribe(\n            data => {\n                this.modules_list = data;\n                this.task.module = this.modules_list[0].id;\n                this.task.type = this.modules_list[0].processing_types[0].id;\n            },\n            error => this.errorMessage = <any>error\n        );\n    }\n\n    getTypesFromModule(id: number): Type[] {\n        return this.modules_list.find(elt => elt.id === id).processing_types;\n    }\n\n    onCancel() {\n        this.dialog.close();\n    }\n\n    onCreateTask() {\n        if (!TaskModalComponent.controlTaskBeforeCreate(this.task)) {\n            return;\n        }\n        this.taskService.createTask(this.task).subscribe(\n            task => {\n                this.task = task;\n                this.dialog.close(this.task);\n            },\n            error => {\n                this.errorMessage = <any>error;\n                this.dialog.dismiss();\n            }\n        );\n    }\n\n    beforeDismiss(): boolean {\n        return false;\n    }\n\n    beforeClose(): boolean {\n        return false;\n    }\n\n}\n"]}