{"version":3,"file":"toolbar-button.service.js","sourceRoot":"","sources":["../../../../src/app/toolbar/toolbar-button.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AACzC,wCAAqC;AAIrC,IAAa,oBAAoB;IAQ7B;QAFQ,iBAAY,GAAG,CAAC,CAAC;QAGrB,IAAI,CAAC,qBAAqB,GAAG,IAAI,iBAAO,EAAU,CAAC;QACnD,IAAI,CAAC,qBAAqB,GAAG,IAAI,iBAAO,EAAU,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IACrE,CAAC;IAED,yCAAU,GAAV;QACI,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,yCAAU,GAAV;QACI,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,kDAAmB,GAAnB,UAAoB,IAA8B,EAAE,KAA4B,EAAE,QAAqB;QACnG,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IACjE,CAAC;IAED,kDAAmB,GAAnB,UAAoB,IAA8B,EAAE,KAA4B,EAAE,QAAqB;QACnG,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACtD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACvD,CAAC;IACL,2BAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,oBAAoB;IADhC,iBAAU,EAAE;;GACA,oBAAoB,CAoChC;AApCY,oDAAoB","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class ToolbarButtonService {\n    private _createTaskItemSource: Subject<number>;\n    private _toggleViewItemSource: Subject<number>;\n    private _createTaskItem: Observable<number>;\n    private _toggleViewItem: Observable<number>;\n\n    private _currentView = 0;\n\n    constructor() {\n        this._createTaskItemSource = new Subject<number>();\n        this._toggleViewItemSource = new Subject<number>();\n        this._createTaskItem = this._createTaskItemSource.asObservable();\n        this._toggleViewItem = this._toggleViewItemSource.asObservable();\n    }\n\n    createTask() {\n        console.log('Emit task creation event');\n        this._createTaskItemSource.next(0);\n    }\n\n    toggleView() {\n        console.log('Emit toggle view event');\n        this._currentView++;\n        this._toggleViewItemSource.next(this._currentView % 2);\n    }\n\n    subscribeCreateTask(next?: (value: number) => void, error?: (error: any) => void, complete?: () => void) {\n        console.log('Subscribe to task creation event');\n        return this._createTaskItem.subscribe(next, error, complete);\n    }\n\n    subscribeToggleView(next?: (value: number) => void, error?: (error: any) => void, complete?: () => void) {\n        console.log('Subscribe to toggle view event');\n        this._toggleViewItem.subscribe(next, error, complete);\n        this._toggleViewItemSource.next(this._currentView);\n    }\n}\n"]}