version: 2
jobs:
  build:
    machine: true
    environment:
      - IMAGE: "firefly-api"
    steps:
      - checkout
      - run:
          name: Check build from the Dockerfile
          command: docker build -t $IMAGE:`cat VERSION.txt` .

  "deploy-snapshot":
    machine: true
    environment:
      - IMAGE: "firefly-api"
    steps:
      - checkout
      - run:
          name: Log in to docker hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build snapshot image from Dockerfile
          command: docker build -t $DOCKER_USER/$IMAGE:`cat VERSION.txt`-SNAPSHOT .
      - run:
          name: Push snapshot image to docker hub
          command: docker push $DOCKER_USER/$IMAGE:`cat VERSION.txt`-SNAPSHOT

  "deploy-release":
    machine: true
    environment:
      - IMAGE: "firefly-api"
    steps:
      - checkout
      - run:
          name: Log in to docker hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Build release image and remove last snapshot
          command: docker build -t $DOCKER_USER/$IMAGE:`cat VERSION.txt` .
      - run:
          name: Push image to docker hub
          command: docker push $DOCKER_USER/$IMAGE:`cat VERSION.txt`

  analysis:
    docker:
      - image: celiangarcia/firefly-api-base-sonar:0.3
    steps:
      - checkout
      - run:
          name: Build app using sonar's build wrapper
          command: |
            mkdir build
            cd build
            cmake -DPostgreSQL_TYPE_INCLUDE_DIR=/usr/include/postgresql ..
            build-wrapper --out-dir wrapper-output  make -j12
      - run:
          name: Run sonar with maven
          command: mvn sonar:sonar
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=celian-garcia-github
            -Dsonar.login=$SONAR_LOGIN
            -Dsonar.cfamily.build-wrapper-output=build/wrapper-output
          environment:
            MAVEN_OPTS: "-Xmx3062m -XX:MaxPermSize=512m -XX:ReservedCodeCacheSize=128m"

workflows:
  version: 2
  all:
    jobs:
      - analysis
      - build
      - "deploy-snapshot":
          requires:
            - build
            - analysis
          filters:
            branches:
              only: develop
      - "deploy-release":
          requires:
            - build
            - analysis
          filters:
            branches:
              only: master
            tags:
              only: /.*/
