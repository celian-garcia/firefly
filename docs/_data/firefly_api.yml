---
swagger: '2.0'
info:
  version: 1.0.0
  title: Firefly
  description: |

consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
host: localhost:8080
basePath: /api/v1
paths:
  /tasks:
    get:
      summary: List all tasks
      responses:
        200:
          description: Array of tasks.
          examples:
            application/json: >
              [
                {
                  "date": "01/01/2001",
                  "description": "Description of first task",
                  "id": 0,
                  "module": 0,
                  "name": "Title of first task",
                  "state": 3,
                  "type": 1,
                  "user_name": "toto"
                },
                {
                  "date": "01/01/2001",
                  "description": "Description of second task",
                  "id": 1,
                  "module": 0,
                  "name": "Title of second task",
                  "state": 3,
                  "type": 1,
                  "user_name": "toto"
                }
              ]
    post:
      summary: Create a task
      responses:
        200:
          description: Task created with success.
          examples:
            application/json: >
              {
                "date": "01/01/2001",
                "description": "Description of third task",
                "id": 2,
                "module": 0,
                "name": "Title of third task",
                "state": 0,
                "type": 1,
                "user_name": "toto"
              }
      parameters:
        - name: name
          in: body
          type: string
          description: Name of the task
          required: true
        - name: description
          in: body
          type: string
          description: Description of the task
          required: true
        - name: user
          in: body
          type: string
          description: User login who creates the task
          required: true
        - name: module
          in: body
          type: int
          description: Module id
          required: true
        - name: type
          in: body
          type: int
          description: Type id
          required: true

  /tasks/{id}:
    get:
      summary: Get a task by id
      responses:
        200:
          description: The task of the given id.
          examples:
            application/json: >
              {
                "date": "01/01/2001",
                "description": "Description of third task",
                "id": 2,
                "module": 0,
                "name": "Title of third task",
                "state": 0,
                "type": 1,
                "user_name": "toto"
              }
      parameters:
        - name: id
          in: path
          description: Task ID
          type: integer
          required: true
  /tasks/{id}/run:
    post:
      summary: Run a task by id
      responses:
        200:
          description: A simple result ok json.
          examples:
            application/json: >
              {
                "resultOk": true
              }
      parameters:
        - name: id
          in: path
          description: Task ID
          type: integer
          required: true
  /tasks/{id}/operations/{lastOperationIndex}:
    get:
      summary: Get the progress of a task from last operation index.
      responses:
        200:
          description: A new last operation index and a list of all the operations to do.
          examples:
            application/json: >
              {
                "lastOperationIndex": 48,
                "operations": [
                  {
                    "id": 47,
                    "type": "add",
                    "element": {
                      "id": 18,
                      "type": "f_point3d"
                      "value": {
                        "x": 8,
                        "y": 8,
                        "z": 0
                      }
                    }
                  },
                  {
                    "id": 48,
                    "type": "add",
                    "element": {
                      "id": 19,
                      "type": "f_point3d"
                      "value": {
                        "x": 9,
                        "y": 9,
                        "z": 0
                      }
                    }
                  }
                ]
              }
        301:
          description: (Not yet implemented) The task is not running anymore so operations are gone. Now use the result endpoint.
      parameters:
        - name: id
          in: path
          description: Task ID
          type: integer
          required: true
        - name: lastOperationIndex
          in: path
          description: Index of the last operation (defaulted to 0)
          type: integer
          default: 0
  /tasks/{id}/result:
    get:
      summary: (Not yet implemented) Get the final result of a task.
      responses:
        200:
          description: Get the final result of a task.
        404:
          description: There is no result for this task because it is probably running.
      parameters:
        - name: id
          in: path
          description: Task ID
          type: integer
          required: true