---
swagger: '2.0'
info:
  version: 1.0.0
  title: Firefly
  description: |

schemes:
  - http
host: localhost:8080
basePath: /api/v1
paths:
  /tasks:
    get:
      summary: List all tasks
      responses:
        200:
          description: Array of tasks.
          schema:
            type: array
            items:
              $ref: '#/definitions/FullTask'
    post:
      responses:
        200:
          description: Value of the freshly created task.
          schema:
            $ref: '#/definitions/FullTask'
      parameters:
        - name: body
          in: body
          description: Task we want to create.
          required: true
          schema:
            $ref: '#/definitions/Task'
  /tasks/{id}:
    get:
      responses:
        200:
          description: Get a task by id.
      parameters:
            - name: id
              in: path
              description: Task ID
              type: integer
              required: true
  /tasks/{id}/progress/{progress}:
    parameters:
      - name: id
        in: path
        description: Task ID
        type: integer
        required: true
      - name: progress
        in: path
        description: Current progress ID of the task (defaulted to 0)
        type: integer
        required: true
        default: 0
    get:
      responses:
        200:
          description: Get the progress of a task from last progress id.
          schema:
            type: object
            properties:
              new_progress:
                type: integer
                example: 1
                description: The last progress ID that should be used for next progress request.
              operations:
                type: array
                items:
                  $ref: '#/definitions/Operation'
        410:
          description: The task is not running anymore so operations are gone. Now use the result endpoint.
  /tasks/{id}/result:
    parameters:
      - name: id
        in: path
        description: Task ID
        type: integer
        required: true
    get:
      responses:
        200:
          description: Get the final result of a task.
        404:
          description: There is no result for this task because it is probably running.
definitions:
  Task:
    required:
      - name
      - description
      - type
      - module
    properties:
      name:
        type: string
        description: Display name of the task.
      description:
        type: string
        description: Description of the task.
      type:
        type: integer
        description: The unique ID which identify the type of the task.
      module:
        type: integer
        description: The unique ID which identify the module to which the task belongs.
  FullTask:
    allOf:
      - $ref: '#/definitions/Task'
      - properties:
          id:
            type: integer
            description: Unique id representing a specific task.
          state:
            type: integer
            description: State of the task.
            default: started
            enum:
              - started
              - stopped
          user_name:
            type: string
            description: Name of the user who created the task.
          date:
            type: string
            description: Date and time of the task creation, in iso format.
  Operation:
    type: object
    properties:
      id:
        type: integer
        description: Unique ID of the operation
      type:
        type: string
        enum:
          - "ADD"
          - "REMOVE"
        description: Type of operation that should be done.
      json:
        type: string
        description: JSON field defining the object that should be processed. <br>Properties of json field are not decided for the moment...

